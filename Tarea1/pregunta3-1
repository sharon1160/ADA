//INSERT SORT

#include <bits/stdc++.h> 
using namespace std; 

/* Function to sort an array using insertion sort*/
void insertionSort(int arr[], int n) 
{   
    int asig=0;
    int compa=0;
    int objeto=0;
    int memoria=0; 

	int i, key, j;
    objeto+=3; 
    asig++;
	for (i = 1; i < n; i++,asig++) 
	{ 
        compa++;
		key = arr[i]; 
		j = i - 1;
        asig+=2; 
		/* Move elements of arr[0..i-1], that are 
		greater than key, to one position ahead 
		of their current position */
		while (j >= 0 && arr[j] > key) 
		{ 
            compa+=2;
			arr[j + 1] = arr[j]; 
			j = j - 1; 
            asig+=2;
		}
        compa+=2;
		arr[j + 1] = key;
        asig++; 
	} 
    compa++;

    asig=asig*8;
    compa=compa*2;
    objeto=objeto*200;
    //memoria=memoria*50 + n* 10

    cout<<"Numero de asignaciones: "<<asig<<endl;
    cout<<"Numero de comparaciones: "<<compa<<endl;
    cout<<"Numero de creaciones de objeto: "<<objeto<<endl;
    cout<<"Numero de asignaciones de memoria: "<<memoria<<endl;
} 

// A utility function to print an array of size n 
void printArray(int arr[], int n) 
{ 
	int i; 
	for (i = 0; i < n; i++) 
		cout << arr[i] << " "; 
	cout << endl; 
} 

/* Driver code */
int main() 
{ 
	int arr[] = { 12, 11, 13, 5, 6 }; 
	int n = sizeof(arr) / sizeof(arr[0]); 

	insertionSort(arr, n); 
	printArray(arr, n); 

	return 0; 
} 

//Fuente:geeksforgeeks
